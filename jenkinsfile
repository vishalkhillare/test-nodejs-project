pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME == 'dev-test-nodejs' }
                    expression { env.BRANCH_NAME == 'prod-test-nodejs' }
                }
            }
            steps {
                echo 'Checking out code from Git...'
                git branch: env.BRANCH_NAME, url: 'https://github.com/vishalkhillare/test-nodejs-project.git'
            }
        }

        stage('install') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME == 'dev-test-nodejs' }
                    expression { env.BRANCH_NAME == 'prod-test-nodejs' }
                }
            }
            steps {
                script {
                    // For both Unix and Windows
                    if (isUnix()) {
                        sh 'npm install'
                    } else {
                        bat 'npm install'
                    }
                }
            }
        }

        stage('create-env-dev') {
            when {
                expression { env.BRANCH_NAME == 'dev-test-nodejs' }
            }
            environment {
                DEPLOYMENT_SERVER_IP = '15.207.99.187'  // Replace with your development server IP
                DEPLOYMENT_PATH = '/home/ubuntu/my-nodejs-app'
            }
            steps {
                script {
                    withCredentials([
                        sshUserPrivateKey(credentialsId: 'deploy-to-devlopment', keyFileVariable: 'SSH_KEY')
                    ]) {
                        // Simplified script for both Unix and Windows
                        sh '''
                            mkdir -p ~/.ssh
                            ssh-keyscan ${DEPLOYMENT_SERVER_IP} >> ~/.ssh/known_hosts
                            rsync -avz --delete -e "ssh -i ${SSH_KEY}" ./ deployer@${DEPLOYMENT_SERVER_IP}:${DEPLOYMENT_PATH}
                            ssh -i ${SSH_KEY} deployer@${DEPLOYMENT_SERVER_IP} "cd ${DEPLOYMENT_PATH} && npm install && npm start &"
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
