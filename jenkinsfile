pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                script {
                    echo 'Checking out code from Git...'
                    checkout scm
                }
            }
        }

        stage('install') {
            steps {
                bat 'npm install'
            }
        }

        stage('create-env-dev') {
            when {
                branch 'dev-test-nodejs'
            }
            environment {
                DEPLOYMENT_SERVER_IP = '15.207.99.187'  // Replace with your development server IP
                DEPLOYMENT_PATH = '/home/ubuntu/my-nodejs-app'
                SSH_PASSWORD = credentials('your-ssh-password-id')  // Replace with your SSH password credential ID
            }
            steps {
                script {
                    // Install sshpass
                    bat 'choco install -y sshpass'

                    // Create the .ssh directory if it doesn't exist
                    bat 'mkdir C:\\Users\\Administrator\\.ssh'
                }
                withCredentials([
                    sshUserPrivateKey(credentialsId: "deploy-to-devlopment", keyFileVariable: 'sshKey')
                ]) {
                    echo 'Deploying the application'
                    script {
                        bat '''
                            echo %sshKey% > C:\\Users\\Administrator\\.ssh\\id_rsa
                            echo %DEPLOYMENT_SERVER_IP% > C:\\Users\\Administrator\\.ssh\\known_hosts

                            # Synchronize files using rsync
                            sshpass -p %SSH_PASSWORD% rsync -ravz --delete --exclude=node_modules -e "ssh -i C:\\Users\\Administrator\\.ssh\\id_rsa" .\\ deployer@%DEPLOYMENT_SERVER_IP%:%DEPLOYMENT_PATH%
                            
                            # Install dependencies and start the application
                            sshpass -p %SSH_PASSWORD% ssh -i C:\\Users\\Administrator\\.ssh\\id_rsa deployer@%DEPLOYMENT_SERVER_IP% "cd %DEPLOYMENT_PATH% && npm install && npm start"
                        '''
                    }
                }
            }
        }

        stage('Declarative: Post Actions') {
            steps {
                echo 'Pipeline failed!'
            }
        }
    }
}
