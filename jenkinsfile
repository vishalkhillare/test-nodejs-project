pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                echo 'Checking out code from Git...'
                git branch: 'main', url: 'https://your-git-repo-url.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the Node.js application...'
                bat label: 'npm install', script: 'npm install'
            }
        }

        stage('Create .env') {
            steps {
                echo 'Creating .env file...'
                script {
                    // Adjust this part based on your requirements to create .env file content
                    echo "PORT=3000" > .env
                    echo "MONGODB_URL=mongodb://localhost:27017/mydatabase" >> .env
                    echo "DB_NAME=mydatabase" >> .env
                    // Add other environment variables as needed
                }
            }
        }

        stage('Deploy to Development') {
            when {
                branch 'develop' // Adjust the branch name as needed
            }
            steps {
                echo 'Deploying the Node.js application to development environment...'
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'your-ssh-credentials-id', keyFileVariable: 'SSH_KEY')]) {
                        sh '''
                            ssh-keyscan $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
                            rsync -avz --delete -e "ssh -i $SSH_KEY" ./ deployer@$DEPLOYMENT_SERVER_IP:$DEPLOYMENT_PATH
                            ssh -i $SSH_KEY deployer@$DEPLOYMENT_SERVER_IP "cd $DEPLOYMENT_PATH && npm install && pm2 restart your-app"
                        '''
                    }
                }
            }
        }

        stage('Deploy to Production') {
            when {
                branch 'main' // Adjust the branch name as needed
            }
            steps {
                echo 'Deploying the Node.js application to production environment...'
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'your-ssh-credentials-id', keyFileVariable: 'SSH_KEY')]) {
                        sh '''
                            ssh-keyscan $PRODUCTION_SERVER_IP >> ~/.ssh/known_hosts
                            rsync -avz --delete -e "ssh -i $SSH_KEY" ./ deployer@$PRODUCTION_SERVER_IP:$PRODUCTION_PATH
                            ssh -i $SSH_KEY deployer@$PRODUCTION_SERVER_IP "cd $PRODUCTION_PATH && npm install && pm2 restart your-app"
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
