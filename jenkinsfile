pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            // ... (unchanged)
        }

        stage('install') {
            // ... (unchanged)
        }

        stage('create-env-dev') {
            when {
                branch 'dev-test-nodejs'
            }
            environment {
                DEPLOYMENT_SERVER_IP = '15.207.99.187'  // Replace with your development server IP
                DEPLOYMENT_PATH = '/home/ubuntu/my-nodejs-app'
            }
            steps {
                withCredentials([
                    sshUserPrivateKey(credentialsId: "deploy-to-devlopment", keyFileVariable: 'sshKey')
                ]) {
                    echo 'Deploying the application'
                    script {
                        // Determine the operating system
                        def isUnix = isUnix()

                        // Set the commands based on the operating system
                        def deployCommands = isUnix ? '''
                            echo "Setting up known_hosts..."
                            type nul  1>known_hosts
                            ssh-keyscan $DEPLOYMENT_SERVER_IP  1>>known_hosts

                            echo "Deploying using rsync..."
                            rsync -avz --delete -e "ssh -i $sshKey" ./ deployer@$DEPLOYMENT_SERVER_IP:$DEPLOYMENT_PATH

                            echo "Running remote commands..."
                            ssh -i $sshKey deployer@$DEPLOYMENT_SERVER_IP "cd $DEPLOYMENT_PATH && npm install && npm start &"
                        ''' : '''
                            echo "Setting up known_hosts..."
                            type nul  1>known_hosts
                            ssh-keyscan $DEPLOYMENT_SERVER_IP  1>>known_hosts

                            echo "Deploying using rsync..."
                            rsync -avz --delete -e "ssh -i $sshKey" ./ deployer@$DEPLOYMENT_SERVER_IP:$DEPLOYMENT_PATH

                            echo "Running remote commands..."
                            ssh -i $sshKey deployer@$DEPLOYMENT_SERVER_IP "cd $DEPLOYMENT_PATH && npm install && start npm start"
                        '''

                        // Execute the commands
                        bat(script: deployCommands, returnStatus: true)
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
