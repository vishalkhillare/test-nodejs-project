pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME == 'dev-test-nodejs' }
                    expression { env.BRANCH_NAME == 'prod-test-nodejs' }
                }
            }
            steps {
                echo 'Checking out code from Git...'
                git branch: env.BRANCH_NAME, url: 'https://github.com/vishalkhillare/test-nodejs-project.git'
            }
        }

        stage('install') {
            when {
                anyOf {
                    expression { env.BRANCH_NAME == 'dev-test-nodejs' }
                    expression { env.BRANCH_NAME == 'prod-test-nodejs' }
                }
            }
            steps {
                sh 'npm install'
            }
        }

        stage('create-env-dev') {
            when {
                branch 'dev-test-nodejs'
            }
            environment {
                DEPLOYMENT_SERVER_IP = '15.207.99.187'  // Replace with your development server IP
                DEPLOYMENT_PATH = '/home/ubuntu/my-nodejs-app'
            }
            steps {
                script {
                    echo 'Creating .env file...'
                    // Adjust this part based on your requirements to create .env file content
                    echo "PORT=3000" > .env
                    echo "MONGODB_URL=mongodb://localhost:27017/mydatabase" >> .env
                    echo "DB_NAME=mydatabase" >> .env
                    // Add other environment variables as needed
                }

                // Use 'start' to run processes in the background on Windows
                bat 'start npm install'
                bat 'start npm start'

                withCredentials([
                    sshUserPrivateKey(credentialsId: "deploy-to-development", keyFileVariable: 'sshKey')
                ]) {
                    echo 'Deploying the application'
                    sh '''#!/bin/bash
                        ssh-keyscan $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
                        rsync -avz --delete -e "ssh -i $sshKey" ./ deployer@$DEPLOYMENT_SERVER_IP:$DEPLOYMENT_PATH
                        ssh -i $sshKey deployer@$DEPLOYMENT_SERVER_IP "cd $DEPLOYMENT_PATH && npm install && npm start"
                    '''
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
